import omni.replicator.core as rep

with rep.new_layer():
    
    GEAR = 'omniverse://localhost/Projects/Gears/CAD/gear_01.usd'
    SURFACE = 'omniverse://localhost/NVIDIA/Assets/Scenes/Templates/Basic/display_riser.usd'
    ENVS = 'omniverse://localhost/NVIDIA/Assets/Scenes/Templates/Interior/ZetCG_ExhibitionHall.usd'
    
    def get_gear():
        gear = rep.create.from_usd(GEAR, semantics=[('class', 'gear')])
        
        with gear:
            rep.modify.pose(
                position=rep.distribution.uniform((-500, 0, -500), (500, 0, 500)),
                rotation=rep.distribution.uniform((-90,-45, 0), (-90, 45, 0)),
                #scale = 100
            )
            #rep.physics.rigid_body(
                #velocity=rep.distribution.uniform((-0,0,-0),(0,0,0)),
                #angular_velocity=rep.distribution.uniform((-0,0,-100),(0,0,0)))
        #return gear
        
    #GEARS = 'omniverse://localhost/Projects/Gears/CAD/Spur/USD'
    
    #def get_gears():
        #gears = rep.create.from_dir(GEARS, semantics=[('class', 'gear')]
        
        #with gear:
            #rep.modify.pose(
                #position=rep.distribution.uniform((-50, 0, -50), (50, 0, 50)),
                #rotation=rep.distribution.uniform((-90,-45, 0), (-90, 45, 0)),
            #)
            #rep.physics.rigid_body(
                #velocity=rep.distribution.uniform((-0,0,-0),(0,0,0)),
                #angular_velocity=rep.distribution.uniform((-0,0,-100),(0,0,0)))
        #return gear
        
    #def get_instantgears():
        #instances = rep.randomizer.instantiate(rep.utils.get_usd_files(GEARS, size=10)
        
        #with gear:
            #rep.modify.semantics([('class', 'gear')])
            #rep.modify.pose(
                #position=rep.distribution.uniform((-50, 0, -50), (50, 0, 50)),
                #rotation=rep.distribution.uniform((-90,-45, 0), (-90, 45, 0)),
            #)
            #rep.physics.rigid_body(
                #velocity=rep.distribution.uniform((-0,0,-0),(0,0,0)),
                #angular_velocity=rep.distribution.uniform((-0,0,-100),(0,0,0)))
        #return instances.node
     
    # Randomizing light source
    def sphere_lights():
        lights = rep.create.light(
            light_type="Sphere",
            temperature=rep.distribution.normal(6500, 500),
            intensity=rep.distribution.normal(35000, 5000),
            position=rep.distribution.uniform((-300, -300, -300), (300, 300, 300)),
            scale=rep.distribution.uniform(50, 100),
            count=rep.distribution.choice([1, 2])
        )
        return lights.node
        
    rep.randomizer.register(get_gear)
    rep.randomizer.register(sphere_lights)
    
    env = rep.create.from_usd(ENVS)
    surface = rep.create.from_usd(SURFACE)
    with surface:
        rep.physics.collider()
        
    camera = rep.create.camera(focus_distance=800, f_stop=0.5)
    render_product = rep.create.render_product(camera, resolution=(1280, 1024))
     
    writer = rep.WriterRegistry.get("BasicWriter")
    writer.initialize(output_dir="_output", rgb=True, bounding_box_2d_tight=True)
    writer.attach([render_product])

    with rep.trigger.on_frame(num_frames=100):
        rep.randomizer.get_gear()
        #rep.randomizer.get_gears()
        rep.randomizer.sphere_lights()
        with camera:
            rep.modify.pose(position=rep.distribution.uniform((-500, 200, -500), (500, 500, 500)), look_at=(0,0,0))
            
    #rep.orhestrator.run()
